[
    {
        "tag": "script",
        "innerText": "MathJax = {\n            tex: {\n                inlineMath: [['$', '$']]\n            }, \n            startup: {\n                typeset: false\n            },\n            options: {\n                enableMenu: false\n            }\n        };"
    },
    {
        "tag": "script",
        "src": "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"
    },
    {
        "tag": "link",
        "rel": "stylesheet",
        "href": "https://cdn.jsdelivr.net/npm/pseudocode@latest/build/pseudocode.min.css"
    },
    {
        "tag": "style",
        "innerText": "\n            .ps-algorithm {\n                border-top: 2px solid var(--color-font) !important;\n                border-bottom: 2px solid var(--color-font) !important;\n            }\n            .ps-algorithm.with-caption > .ps-line {\n                border-bottom: 2px solid var(--color-font) !important;\n            }\n        "
    },
    {
        "tag": "script",
        "src": "https://cdn.jsdelivr.net/npm/pseudocode@latest/build/pseudocode.min.js"
    },
    {
        "tag": "script",
        "src": "https://cdn.jsdelivr.net/npm/echarts@5.4.2/dist/echarts.min.js"
    },
    [
        "MathJax",
        [
            "Discriminative Model: $\\frac{\\partial}{\\partial\\theta}\\log p(y|X)$",
            "$$Z(\\theta)=\\sum\\limits_{k}\\exp\\left(f_\\theta^{(k)}(X)\\right)$$",
            "$$p(y|X)=\\frac{\\exp(f_\\theta^{(k)}(X))}{Z(\\theta)}$$",
            "$$\\begin{aligned}\n                \\frac{\\partial}{\\partial\\theta}\\log p(y|X) &= \\frac{\\partial}{\\partial\\theta}\\left(f_\\theta^{(k)}(X) - \\log\\left(Z(\\theta)\\right)\\right)\\\\\n                &= \\frac{\\partial}{\\partial\\theta}f_\\theta^{(k)}(X) - \\frac{1}{Z(\\theta)}\\frac{\\partial}{\\partial\\theta}Z(\\theta)\\\\\n                &= \\frac{\\partial}{\\partial\\theta}f_\\theta^{(k)}(X) - \\frac{1}{Z(\\theta)}\\frac{\\partial}{\\partial\\theta}\\left(\\sum\\limits_{k}\\exp\\left(f_\\theta^{(k)}(X)\\right)\\right)\\\\\n                &= \\frac{\\partial}{\\partial\\theta}f_\\theta^{(k)}(X) - \\sum\\limits_{k'}\\frac{1}{Z(\\theta)}\\frac{\\partial}{\\partial\\theta}\\exp\\left(f_\\theta^{(k')}(X)\\right)\\\\\n                &= \\frac{\\partial}{\\partial\\theta}f_\\theta^{(k)}(X) - \\sum\\limits_{k'}\\frac{\\exp\\left(f_\\theta^{(k')}(X)\\right)}{Z(\\theta)}\\frac{\\partial}{\\partial\\theta}f_\\theta^{(k')}(X)\\\\\n                &= \\frac{\\partial}{\\partial\\theta}f_\\theta^{(k)}(X) - \\sum\\limits_{k'}p_{k'}\\frac{\\partial}{\\partial\\theta}f_\\theta^{(k')}(X)\\\\\n                &= \\sum\\limits_{k'}\\left(1(k=k')-p_{k'}\\right)\\frac{\\partial}{\\partial\\theta}f_\\theta^{(k')}(X)\\\\\n                &= \\frac{\\partial}{\\partial\\theta}f_\\theta(X)^\\top(Y-p)\\\\\n                &= \\frac{\\partial}{\\partial\\theta}f_\\theta(X)^\\top(Y-\\text{E}_\\theta(Y|X))\n            \\end{aligned}$$"
        ]
    ],
    [
        "pseudocode.js",
        [
            "\n            <pre id=\"alg1\">\n                % This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)\n                \\begin{algorithm}\n                \\caption{Quicksort}\n                \\begin{algorithmic}\n                \\PROCEDURE{Quicksort}{$A, p, r$}\n                    \\IF{$p < r$} \n                        \\STATE $q = $ \\CALL{Partition}{$A, p, r$}\n                        \\STATE \\CALL{Quicksort}{$A, p, q - 1$}\n                        \\STATE \\CALL{Quicksort}{$A, q + 1, r$}\n                    \\ENDIF\n                \\ENDPROCEDURE\n                \\PROCEDURE{Partition}{$A, p, r$}\n                    \\STATE $x = A[r]$\n                    \\STATE $i = p - 1$\n                    \\FOR{$j = p$ \\TO $r - 1$}\n                        \\IF{$A[j] < x$}\n                            \\STATE $i = i + 1$\n                            \\STATE exchange\n                            $A[i]$ with $A[j]$\n                        \\ENDIF\n                        \\STATE exchange $A[i]$ with $A[r]$\n                    \\ENDFOR\n                \\ENDPROCEDURE\n                \\end{algorithmic}\n                \\end{algorithm}\n            </pre>",
            "\n            <pre id=\"alg2\">\n                % This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)\n                \\begin{algorithm}\n                \\caption{Quicksort}\n                \\begin{algorithmic}\n                \\PROCEDURE{Quicksort}{$A, p, r$}\n                    \\IF{$p < r$} \n                        \\STATE $q = $ \\CALL{Partition}{$A, p, r$}\n                        \\STATE \\CALL{Quicksort}{$A, p, q - 1$}\n                        \\STATE \\CALL{Quicksort}{$A, q + 1, r$}\n                    \\ENDIF\n                \\ENDPROCEDURE\n                \\PROCEDURE{Partition}{$A, p, r$}\n                    \\STATE $x = A[r]$\n                    \\STATE $i = p - 1$\n                    \\FOR{$j = p$ \\TO $r - 1$}\n                        \\IF{$A[j] < x$}\n                            \\STATE $i = i + 1$\n                            \\STATE exchange\n                            $A[i]$ with $A[j]$\n                        \\ENDIF\n                        \\STATE exchange $A[i]$ with $A[r]$\n                    \\ENDFOR\n                \\ENDPROCEDURE\n                \\end{algorithmic}\n                \\end{algorithm}\n            </pre>"
        ],
        "pseudocode.renderElement(document.getElementById(\"alg1\"), { captionCount: 0});",
        "pseudocode.renderElement(document.getElementById(\"alg2\"), { captionCount: 1});"
    ],
    [
        "<img src='https://echarts.apache.org/zh/images/favicon.png' style='height: 0.8em;'></img> echarts",
        [
            "$$50\\sin(x)\\cos(2x+1)\\sin(3x+2)$$<div id='main' style='width: 100%;height:90vh;'></div>"
        ],
        "\n        var chartDom = document.getElementById('main');\n        var myChart = echarts.init(chartDom, null, {renderer: 'svg'});\n        var option;\n\n        function func(x) {\n            x /= 10;\n            return Math.sin(x) * Math.cos(x * 2 + 1) * Math.sin(x * 3 + 2) * 50;\n        }\n        function generateData() {\n            let data = [];\n            for (let i = -100; i <= 100; i += 0.1) {\n                data.push([i, func(i)]);\n            }\n            return data;\n        }\n        option = {\n            animation: false,\n            grid: {\n                top: 40,\n                left: 50,\n                right: 40,\n                bottom: 50\n            },\n            xAxis: {\n                name: 'x',\n                min: -100,\n                max: 100,\n                minorTick: {\n                    show: true\n                    },\n                minorSplitLine: {\n                    show: true\n                    }\n            },\n            yAxis: {\n                name: 'y',\n                min: -100,\n                max: 100,\n                minorTick: {\n                    show: true\n                    },\n                minorSplitLine: {\n                    show: true\n                    }\n            },\n            dataZoom: [\n                {\n                    show: true,\n                    type: 'inside',\n                    filterMode: 'none',\n                    xAxisIndex: [0],\n                    startValue: -20,\n                    endValue: 20\n                },\n                {\n                    show: true,\n                    type: 'inside',\n                    filterMode: 'none',\n                    yAxisIndex: [0],\n                    startValue: -20,\n                    endValue: 20\n                }\n            ],\n            series: [\n                {\n                    type: 'line',\n                    showSymbol: false,\n                    clip: true,\n                    data: generateData()\n                }\n            ]\n        };\n\n        option && myChart.setOption(option);\n        "
    ],
    "MathJax.typeset()"
]